From 5233ccba67e20f35cd8a00851d51136d9c94960d Mon Sep 17 00:00:00 2001
From: Yuri Konotopov <ykonotopov@gnome.org>
Date: Thu, 19 Sep 2019 12:39:12 +0400
Subject: [PATCH] Added PACKAGE_MODE cmake option to simplify build for distro
 packaging

---
 CMakeLists.txt                     | 14 ++++++++---
 extras/videoDrivers/CMakeLists.txt |  8 ++++--
 libs/libGamedata/CMakeLists.txt    | 40 ++++++++++++++++--------------
 3 files changed, 38 insertions(+), 24 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index db954012..b368a527 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -2,7 +2,11 @@ cmake_minimum_required(VERSION 3.8)
 
 project(s25client)
 
-if(NOT MSVC)
+option(PACKAGE_MODE "Build for packaging in distros" OFF)
+option(USE_SDL "Use sdl 1.2 drivers" ON)
+option(USE_SDL2 "Use sdl 2 drivers" ON)
+
+if(NOT MSVC AND NOT PACKAGE_MODE)
     #Check for ccache
     if(APPLE)
         find_program(CCACHE_PROGRAM NAMES ccache-lipo ccache)
@@ -30,13 +34,15 @@ endif()
 
 list(APPEND CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake/Modules" "${CMAKE_SOURCE_DIR}/external/libutil/cmake")
 
-include(CheckGitSubmodules)
-check_git_submodules()
+if(NOT PACKAGE_MODE)
+    include(CheckGitSubmodules)
+    check_git_submodules()
+endif()
 
 # Figure out RTTR_REVISION (git hash) and RTTR_VERSION (date)
 # Those can be manually set to override the default values
 # By default those are non-Cache variables which regenerates them on every configure run
-if(NOT RTTR_REVISION)
+if(NOT RTTR_REVISION AND NOT PACKAGE_MODE)
     include(GetGitRevisionDescription)
     # Get git commit hash. Note: CMake will reconfigure if the git hash changes
     get_git_head_revision(RTTR_GIT_REF RTTR_REVISION)
diff --git a/extras/videoDrivers/CMakeLists.txt b/extras/videoDrivers/CMakeLists.txt
index baaeb9d8..90d5a0f1 100644
--- a/extras/videoDrivers/CMakeLists.txt
+++ b/extras/videoDrivers/CMakeLists.txt
@@ -2,5 +2,9 @@ rttr_set_output_dir(RUNTIME ${RTTR_DRIVERDIR}/video)
 rttr_set_output_dir(LIBRARY ${RTTR_DRIVERDIR}/video)
 
 add_subdirectory(WinAPI)
-add_subdirectory(SDL)
-add_subdirectory(SDL2)
+if(USE_SDL)
+	add_subdirectory(SDL)
+endif()
+if(USE_SDL2)
+	add_subdirectory(SDL2)
+endif()
diff --git a/libs/libGamedata/CMakeLists.txt b/libs/libGamedata/CMakeLists.txt
index 603a0508..d94583fe 100644
--- a/libs/libGamedata/CMakeLists.txt
+++ b/libs/libGamedata/CMakeLists.txt
@@ -22,25 +22,29 @@ SOURCE_GROUP(other FILES ${SOURCES_OTHER})
 
 set(_contrib_lua_path ${CMAKE_SOURCE_DIR}/external/lua)
 
-if(MSVC)
-	# Library is in contrib archive which is in prefix path.
-	# We just need the includes (which we did not duplicate in the msvc-contrib
-	list(APPEND CMAKE_PREFIX_PATH ${_contrib_lua_path})
-elseif(WIN32 OR CYGWIN)
-	if(CMAKE_SIZEOF_VOID_P EQUAL 8)
-		set(_contrib_lua_libpath ${_contrib_lua_path}/win64)
-	elseif(CMAKE_SIZEOF_VOID_P EQUAL 4)
-		set(_contrib_lua_libpath ${_contrib_lua_path}/win32)
+if(NOT PACKAGE_MODE)
+	if(MSVC)
+		# Library is in contrib archive which is in prefix path.
+		# We just need the includes (which we did not duplicate in the msvc-contrib
+		list(APPEND CMAKE_PREFIX_PATH ${_contrib_lua_path})
+	elseif(WIN32 OR CYGWIN)
+		if(CMAKE_SIZEOF_VOID_P EQUAL 8)
+			set(_contrib_lua_libpath ${_contrib_lua_path}/win64)
+		elseif(CMAKE_SIZEOF_VOID_P EQUAL 4)
+			set(_contrib_lua_libpath ${_contrib_lua_path}/win32)
+		endif()
+	elseif(CMAKE_SYSTEM_NAME STREQUAL "Linux")
+		if(${CMAKE_SYSTEM_PROCESSOR} MATCHES "i.86")
+			set(_contrib_lua_libpath ${_contrib_lua_path}/lin32)
+		elseif(${CMAKE_SYSTEM_PROCESSOR} MATCHES "amd64|AMD64|x86_64")
+			set(_contrib_lua_libpath ${_contrib_lua_path}/lin64)
+		endif()
+	elseif(APPLE)
+		set(_contrib_lua_libpath ${_contrib_lua_path}/mac)
 	endif()
-elseif(CMAKE_SYSTEM_NAME STREQUAL "Linux")
-	if(${CMAKE_SYSTEM_PROCESSOR} MATCHES "i.86")
-		set(_contrib_lua_libpath ${_contrib_lua_path}/lin32)
-	elseif(${CMAKE_SYSTEM_PROCESSOR} MATCHES "amd64|AMD64|x86_64")
-		set(_contrib_lua_libpath ${_contrib_lua_path}/lin64)
-	endif()
-elseif(APPLE)
-	set(_contrib_lua_libpath ${_contrib_lua_path}/mac)
-endif()
+else()
+	list(APPEND CMAKE_PREFIX_PATH /usr/include/lua5.2)
+endif(NOT PACKAGE_MODE)
 
 # Set only if we have a library for this arch
 if(_contrib_lua_libpath)
-- 
2.21.0

