#!/bin/bash
# Copyright 1999-2018 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2

# Check for OpenRC and include gentoo-functions if needed
if [ -z "${RC_SVCNAME}" ]; then
	source @GENTOO_PORTAGE_EPREFIX@/lib/gentoo/functions.sh
fi

: ${CATALINA_HOME:=@GENTOO_PORTAGE_EPREFIX@/usr/share/tomcat-@SLOT@}
: ${TOMCATS_BASE:=@GENTOO_PORTAGE_EPREFIX@/var/lib/tomcats/}
: ${CATALINA_TMPDIR:=@GENTOO_PORTAGE_EPREFIX@/var/cache/tomcat-@SLOT@/tmp}

: ${TOMCAT_START:=start}

: ${JPDA_TRANSPORT:="dt_socket"}
: ${JPDA_ADDRESS:="8000"}
: ${JPDA_OPTS="-Xdebug -Xrunjdwp:transport=$JPDA_TRANSPORT,address=$JPDA_ADDRESS,server=y,suspend=n"}

if [ -z "${CATALINA_BASE}" ]; then
	if [ -z "${CATALINA_INSTANCE}" ]; then
		CATALINA_BASE="${CATALINA_HOME}"
	else
		CATALINA_BASE="${TOMCATS_BASE}${CATALINA_INSTANCE}"
	fi
fi

if [ -z "${CATALINA_WORKDIR}" ]; then
	CATALINA_WORKDIR="${CATALINA_TMPDIR}"
fi

export JAVA_HOME=`java-config ${TOMCAT_JVM:+--select-vm ${TOMCAT_JVM}} --jre-home`
export CLASSPATH="${CATALINA_HOME}/bin/bootstrap.jar:${CATALINA_HOME}/bin/tomcat-juli.jar"

if [ "$1" = "start" ]; then
	if [ ! -e "${CATALINA_TMPDIR}" ]; then
		eerror "CATALINA_TMPDIR does not exist. Unable to start tomcat."
		eerror "Please see @GENTOO_PORTAGE_EPREFIX@/etc/conf.d/tomcat-@SLOT@ for more information."
		exit 1
	fi

	DEPEND=$(java-config --query DEPEND --package tomcat-@SLOT@):${TOMCAT_EXTRA_JARS}
	DEPEND=${DEPEND%:}

	GCLASSPATH=$(java-config --with-dependencies --classpath "${DEPEND//:/,}"):${TOMCAT_EXTRA_CLASSPATH}
	GCLASSPATH=${GCLASSPATH%:}

	cmd=java args=
	if [ "${TOMCAT_START}" = "debug" ] || [ "${TOMCAT_START}" = "-security debug" ] ; then
		cmd=jdb
		args="${args} -sourcepath ${CATALINA_HOME}/../../jakarta-tomcat-catalina/catalina/src/share"
	fi
	if [ "${TOMCAT_START}" = "-security debug" ] || [ "${TOMCAT_START}" = "-security start" ]; then
		args="${args} -Djava.security.manager"
		args="${args} -Djava.security.policy=${CATALINA_BASE}/conf/catalina.policy"
	fi
	if [ "${TOMCAT_START}" = "jpda start" ] ; then
		args="${args} ${JPDA_OPTS}"
	fi
	if [ -r "${CATALINA_HOME}"/bin/tomcat-juli.jar ]; then
		args="${args} -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager \
		-Djava.util.logging.config.file=${CATALINA_BASE}/conf/logging.properties"
	fi

	cd "${CATALINA_WORKDIR}"

	${JAVA_HOME}/bin/${cmd} \
		${JAVA_OPTS} \
		${JAVA_INSTANCE_OPTS} \
		${args} \
		-Dcatalina.base="${CATALINA_BASE}" \
		-Dcatalina.home="${CATALINA_HOME}" \
		-Djava.io.tmpdir="${CATALINA_TMPDIR}" \
		-Dgentoo.classpath="${GCLASSPATH//:/,}" \
		-classpath "${CLASSPATH}" \
		org.apache.catalina.startup.Bootstrap \
		${CATALINA_OPTS} \
		${TOMCAT_START}
elif [ "$1" = "stop" ]; then
	${JAVA_HOME}/bin/java \
		${JAVA_OPTS} \
		${JAVA_INSTANCE_OPTS} \
		-Dcatalina.base="${CATALINA_BASE}" \
		-Dcatalina.home="${CATALINA_HOME}" \
		-Djava.io.tmpdir="${CATALINA_TMPDIR}" \
		-Dgentoo.classpath="" \
		-classpath "${CLASSPATH}" \
		org.apache.catalina.startup.Bootstrap \
		${CATALINA_OPTS} \
		stop
fi
