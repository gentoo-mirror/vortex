From dab7d99fde6c54da344bfc6973e22834bebb8d05 Mon Sep 17 00:00:00 2001
From: Yuri Konotopov <ykonotopov@gnome.org>
Date: Sun, 21 Apr 2024 17:13:57 +0400
Subject: [PATCH 2/2] Use system libs

---
 CMakeModules/FindMbedTLS.cmake    | 36 +++++++++++++++++++++++++++++++
 externals/CMakeLists.txt          |  8 +------
 src/core/CMakeLists.txt           |  2 +-
 src/dedicated_room/CMakeLists.txt |  3 ++-
 4 files changed, 40 insertions(+), 9 deletions(-)
 create mode 100644 CMakeModules/FindMbedTLS.cmake

diff --git a/CMakeModules/FindMbedTLS.cmake b/CMakeModules/FindMbedTLS.cmake
new file mode 100644
index 0000000000..814bd97da1
--- /dev/null
+++ b/CMakeModules/FindMbedTLS.cmake
@@ -0,0 +1,36 @@
+#***************************************************************************
+#                                  _   _ ____  _
+#  Project                     ___| | | |  _ \| |
+#                             / __| | | | |_) | |
+#                            | (__| |_| |  _ <| |___
+#                             \___|\___/|_| \_\_____|
+#
+# Copyright (C) Daniel Stenberg, <daniel@haxx.se>, et al.
+#
+# This software is licensed as described in the file COPYING, which
+# you should have received as part of this distribution. The terms
+# are also available at https://curl.se/docs/copyright.html.
+#
+# You may opt to use, copy, modify, merge, publish, distribute and/or sell
+# copies of the Software, and permit persons to whom the Software is
+# furnished to do so, under the terms of the COPYING file.
+#
+# This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
+# KIND, either express or implied.
+#
+# SPDX-License-Identifier: curl
+#
+###########################################################################
+find_path(MBEDTLS_INCLUDE_DIRS mbedtls/ssl.h)
+
+find_library(MBEDTLS_LIBRARY mbedtls)
+find_library(MBEDX509_LIBRARY mbedx509)
+find_library(MBEDCRYPTO_LIBRARY mbedcrypto)
+
+set(MBEDTLS_LIBRARIES "${MBEDTLS_LIBRARY}" "${MBEDX509_LIBRARY}" "${MBEDCRYPTO_LIBRARY}")
+
+include(FindPackageHandleStandardArgs)
+find_package_handle_standard_args(MbedTLS DEFAULT_MSG
+    MBEDTLS_INCLUDE_DIRS MBEDTLS_LIBRARY MBEDX509_LIBRARY MBEDCRYPTO_LIBRARY)
+
+mark_as_advanced(MBEDTLS_INCLUDE_DIRS MBEDTLS_LIBRARY MBEDX509_LIBRARY MBEDCRYPTO_LIBRARY)
diff --git a/externals/CMakeLists.txt b/externals/CMakeLists.txt
index c44457f177..7e8c7b0887 100644
--- a/externals/CMakeLists.txt
+++ b/externals/CMakeLists.txt
@@ -40,13 +40,7 @@ endif()
 add_subdirectory(glad)
 
 # mbedtls
-add_subdirectory(mbedtls)
-target_include_directories(mbedtls PUBLIC ./mbedtls/include)
-if (NOT MSVC)
-    target_compile_options(mbedcrypto PRIVATE
-        -Wno-unused-but-set-variable
-        -Wno-string-concatenation)
-endif()
+find_package(MbedTLS REQUIRED)
 
 # MicroProfile
 add_library(microprofile INTERFACE)
diff --git a/src/core/CMakeLists.txt b/src/core/CMakeLists.txt
index fbaa281b50..20008597f3 100644
--- a/src/core/CMakeLists.txt
+++ b/src/core/CMakeLists.txt
@@ -1162,7 +1162,7 @@ else()
 endif()
 
 target_link_libraries(core PUBLIC common PRIVATE audio_core hid_core network video_core nx_tzdb tz)
-target_link_libraries(core PUBLIC Boost::headers PRIVATE fmt::fmt nlohmann_json::nlohmann_json mbedtls RenderDoc::API)
+target_link_libraries(core PUBLIC Boost::headers PRIVATE fmt::fmt nlohmann_json::nlohmann_json ${MBEDTLS_LIBRARY} ${MBEDCRYPTO_LIBRARY} RenderDoc::API)
 if (MINGW)
     target_link_libraries(core PRIVATE ${MSWSOCK_LIBRARY})
 endif()
diff --git a/src/dedicated_room/CMakeLists.txt b/src/dedicated_room/CMakeLists.txt
index 25cc9cca95..67d6634ce1 100644
--- a/src/dedicated_room/CMakeLists.txt
+++ b/src/dedicated_room/CMakeLists.txt
@@ -13,7 +13,8 @@ if (ENABLE_WEB_SERVICE)
     target_link_libraries(suyu-room PRIVATE web_service)
 endif()
 
-target_link_libraries(suyu-room PRIVATE mbedtls mbedcrypto)
+target_link_libraries(suyu-room PRIVATE ${MBEDTLS_LIBRARY} ${MBEDCRYPTO_LIBRARY})
+
 if (MSVC)
     target_link_libraries(suyu-room PRIVATE getopt)
 endif()
-- 
2.43.2

